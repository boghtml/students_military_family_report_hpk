services:
  php:
    image: '${PHP_IMAGE}'
    restart: always
    tty: true
    volumes:
      - ./:/var/www
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/local.ini
    depends_on:
      - redis
      - pgsql
    networks:
      - app
  queue:
    image: '${PHP_IMAGE}'
    restart: always
    tty: true
    environment:
      CONTAINER_ROLE: 'queue'
    volumes:
      - ./:/var/www
      - .docker/php/php.ini:/usr/local/etc/php/conf.d/local.ini
    depends_on:
      - redis
      - pgsql
    networks:
      - app
  background:
    image: '${PHP_IMAGE}'
    restart: always
    tty: true
    environment:
      CONTAINER_ROLE: 'scheduler'
    volumes:
      - ./:/var/www
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/local.ini
    depends_on:
      - redis
      - pgsql
    networks:
      - app

  nginx:
    image: nginx:latest
    ports:
      - 80:80
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf/${APP_ENV}.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app
    depends_on:
      - php
    restart: always

  pgsql:
    image: 'postgres:17'
    ports:
      - '${FORWARD_DB_PORT:-5433}:5432'
    environment:
      PGPASSWORD: '${DB_PASSWORD:-secret}'
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
    volumes:
      - 'dbdata:/var/lib/postgresql/data'
    networks:
      - app
    healthcheck:
      test:
        - CMD
        - pg_isready
        - '-q'
        - '-d'
        - '${DB_DATABASE}'
        - '-U'
        - '${DB_USERNAME}'
      retries: 3
      timeout: 5s
  redis:
    image: 'redis:alpine'
    volumes:
      - redisdata:/data
    networks:
      - app
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      retries: 3
      timeout: 5s
networks:
  app:
    driver: bridge

volumes:
  dbdata:
    driver: local
  redisdata:
    driver: local
